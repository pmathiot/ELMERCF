
$SCALARS_INTERVAL=1

! restart/output management
$id=<ID>
$idm1=<ID-1>
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
include elmer.param
include elmer.incf
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Header
  Mesh DB "." "MSH"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants
  Sea Level = Real $zsl
  Water Density = Real $rhow
  Sea Water Specific heat = Real $cw
  Ice fusion latent heat = Real $Lf 
  Ice density = Real $rhoi
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation

  Coordinate System  = Cartesian 2D
  Grounding Line Melt = Logical True

  Simulation Type = Transient
  Simulation Timing = Logical True

  Timestepping Method = "bdf"
  BDF Order = 2
  Output Intervals(1) = 500
  Timestep Intervals(1) = 2500
  Timestep Sizes(1) = 2.0e-3

  Exit Condition = Variable Time
     Real Procedure "USF_ExitCondition" "ExitCondition"

  Steady State Max Iterations = 4
  Steady State Min Iterations = 1

  Vtu Time Collection = Logical True
 
  OutPut File = "<RSTFILEa>"
  Post File = "$name$_$id$.vtu"

  Restart File = "<RSTFILEb>"
  Restart Position = 0

  max output level = 4
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body 1
  Equation = 1
  Material = 1
  Body Force = 1
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Flow BodyForce 1 = Real 0.0
  Flow BodyForce 2 = Real 0.0
  Flow BodyForce 3 = Real $gravity

  Top Surface Accumulation = Equals smb

  Bottom Surface Accumulation = Variable Melt
     REAL PROCEDURE "USFs_Ronnie_inversion" "MinusA"

  Water Pressure = Variable Zb
    Real procedure "USF_WaterPressure" "WaterPressure"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1
! Material properties
  Viscosity Exponent = Real $1/n
  Critical Shear Rate = Real 1.0e-12


  SSA Mean Viscosity = Variable eta, Mu
     REAL procedure "USFs_Ronnie_inversion" "SSAViscosity"
  
  SSA Mean Density = Real $rhoi

  SSA Critical Thickness = Real 1.0

! slip coeff for the SSA
  SSA Friction Law = String "linear"
  SSA Friction Parameter = Variable beta
     REAL procedure "ElmerIceUSF" "TenPowerA"

!! Min Value for H
   Min H = Real 1.0

!! For Save scalar to compute mass flux (=H*SSA_UV)
  Flux = Equals H

  GroundedAreaCoeff = Variable Groundedmask
        Real procedure "USFs_Ronnie_inversion" "GroundedAreaCoeff"
End

!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solver 1
   Exec Solver = Before all
   Equation = "point"
   Variable = -nooutput "dumy"

   procedure = "nearestpoint" "nearestpoint"
   Exported Variable 1 = -dofs 1 -elem basins
   !Exported Variable 1 = -dofs 1  basins

   Variable 1 = File "basins"
   Target Variable 1 = String "basins"
   Variable 1 data file = File "$data_dir$/$file_basins$"
End

!#-----------------------------------------------------------------------
!#                          SMB SOLVER
!#-----------------------------------------------------------------------
!# SOLVER to read smb from netcdf file (typically RACMO or MAR output)
!#     - input  : * smb netcdf file (Variable 1 data file)
!#                * smb variable name (Variable 1)
!#
!#     - output : smb (Target Variable 1)
!#
!#     - method : interpolation from RACMO grid to ELMER element
!#                using linear interpolation (natural neighbourg, nn-c library)
!#                for other interpolation method change method keyword value
!#                (see elmerice/Solvers/Documentation/Scattered2DInterpolator.md)
!#-----------------------------------------------------------------------
Solver 2
   Exec Solver = Before simulation

   Equation = "ScatteredInter"
   Variable = -nooutput "dumy"

   procedure = "Scattered2DDataInterpolator" "Scattered2DDataInterpolator"
      Bounding Box dx = Real 200000.0
   Variable 1 = File "$var_smb$"
   Variable 1 data file = File "$data_dir$/$file_smb$"
   Target Variable 1 = String "smb"
   Variable 1 method = String "li"
   Exported Variable 1 = smb
End

!#-----------------------------------------------------------------------
!#                          BMB SOLVER
!#-----------------------------------------------------------------------
!# SOLVER to compute basal melt using PICO
!#     - input  : * netcdf file interpolated onto ELMER grid via CDO (File Name)
!#                * variable name corresponding to ice shelf melt    (Variable Name)
!#
!#     - output : * Bottom Surface Accumulation (used by Body Force 1) (Exported Variable 1 Melt)
!#                * Boxes definition (Exported Variable 2 Boxes)
!#
!#     - option : Mask melt based on current grounded mask (Mask melt)
!#                       => tuning on treatment at GL based on Simulation flag : 'Grounding Line Melt'
!#
!#     - comments: PICO need some pre-compute varaible as :
!#                                 * distGL
!#                                 * FrontMask
!#                                 * distIF (ice shelf front)
!#-----------------------------------------------------------------------
Solver 3
  Equation = "distance GL"
  Variable = -dofs 1 distGL
    Procedure = "DistanceSolve" "DistanceSolver1"
  Optimize Bandwidth = logical False
End

Solver 4
  Equation = "FrontMask"
  Variable = FrontMask
  Variable DOFs = 1
    Procedure = "FrontThickness_mask" "FrontThickness_mask"
End

Solver 5
  Equation = "Real distance IF"
  Variable = -dofs 1 distIF
    Procedure = "DistanceSolve" "DistanceSolver1"
  Optimize Bandwidth = logical False
  Exported variable 1 = -dofs 1 distIF
End

Solver 6
   Exported Variable 1 = -dofs 1 -elem Melt
   Exported Variable 2 = -dofs 1 -elem Boxes

   Equation = "box melt"
   Variable = -nooutput dummy
   Procedure = "boxmodel_solver" "boxmodel_solver"

   data file = File "$data_dir$/$file_pico$"
End

!! Apply flotaison; from H compute Zb and Zs
Solver 7
   Equation = "Flotation"
   Variable = GroundedMask
      Procedure = "Flotation2" "Flotation2"

  Exported Variable 1 = bedrock
  Exported Variable 2 = zs
  Exported Variable 3 = zb
  Exported Variable 4 = alpha
  Exported Variable 5 = mu

!
    Steady State Convergence Tolerance = 2.0
!
End

!#
!# ~~~~~~~~~~
!# SSA SOLVER
!# ~~~~~~~~~~
!#

Solver 8

  Equation = "SSA"
  Variable = -dofs 2 "SSAVelocity"

  Procedure = "ElmerIceSolvers" "SSABasalSolver"

  !compute solver time = logical True

  include elmer.lsol

  Nonlinear System Max Iterations = 15
  Nonlinear System Convergence Tolerance  = 1.0e-04
  Nonlinear System Newton After Iterations = 5
  Nonlinear System Newton After Tolerance = 1.0e-04
  Nonlinear System Relaxation Factor = 1.00
  Nonlinear System Abort Not Converged = Logical True

  Sub-Element GL parameterization = Logical True
  GL integration points number = Integer 20
  
  Bulk Assembly Timing = Logical True
  Linear System Timing = Logical True
  Linear System Timing Cumulative = Logical True
!
    Steady State Convergence Tolerance = 1.0e-3

  velocity norm limit = Real 12000.0
!
End

!#
!# ~~~~~~~~~~~~~~~~
!# THICKNESS SOLVER
!# ~~~~~~~~~~~~~~~~
!#

Solver 9

   Equation = "Thickness"
   Variable = -dofs 1 "H"

   !compute solver time = logical True

   Exported Variable 1 = -dofs 1 "H Residual"
   Exported Variable 2 = DhDt

  Procedure = "ElmerIceSolvers" "ThicknessSolver"

  !include LINEAR_SOLVER.txt

    Linear System Solver = Iterative
    Linear System Iterative Method = "BiCGStab"
    Linear System Max Iterations = 1000
    Linear System Convergence Tolerance = 1.0E-12
    Linear System Abort Not Converged = Logical True
    Linear System Residual Output = 1
    Linear System Preconditioning = "ILU2"
   
   ! equation is linear if no min/max
    Nonlinear System Max Iterations = 15
    Nonlinear System Convergence Tolerance  = 1.0e-08
    Nonlinear System Relaxation Factor = 1.00
!
    Steady State Convergence Tolerance = 1.0e-6
!

    Stabilization Method = Stabilized
    Transient Stabilisation = logical true
    Apply Dirichlet = Logical True

    Compute dHdT = Logical True

!!  the convection velocity (mean horizontal velocity)
    Flow Solution Name = String "SSAVelocity"
    
    Bulk Assembly Timing = Logical True
    Linear System Timing = Logical True
    Linear System Timing Cumulative = Logical True
End

!#
!# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!# SOLVER to save monitoring time series
!# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!#

Solver 10
  Exec Interval = $SCALARS_INTERVAL
  Exec Solver = After Timestep

  Equation = "Save Scalars"
   Procedure = File "SaveData" "SaveScalars"

   Filename = File "$name$_$id$_scalars.dat"
  Parallel Reduce = logical True

  Variable 1 = "Time"

! area grounded
   Variable 2 = "groundedmask"
   Operator 2 = "volume"
   Coefficient 2 = "GroundedAreaCoeff"

! int H = Volume
  Variable 3 = "H"
  Operator 3 = "int"

! int dh/dt = dVolume/dt
  Variable 4 = "dhdt"
  Operator 4 = "int"

! int SMB
  Variable 5 = "smb"
  Operator 5 = "int"

! int Melt
  Variable 6 = "Melt"
  Operator 6 = "int"

! SMB_H=Artificial additionnal Mass flux due to limits on H
  Variable 7 = String "h residual"
  Operator 7 = String "sum"

! SSA norm
  Variable 8  = "SSAVelocity"
  Operator 8  = String "norm"

! H norm
  Variable 9  = String "H"
  Operator 9  = String "norm"

! dhdt norm
  Variable 10 = String "dhdt"
  Operator 10 = String "norm"

End

!#
!# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!# SOLVER to save usefull time series by basin
!# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!#

Solver 11 
  Exec Solver = After Timestep
  Equation = "Save INITMIP"
    Procedure = File "INITMIP_Scalar_OUTPUT" "INITMIP_Scalar_OUTPUT"
    Variable = -nooutput "unused"


   Exported Variable 1 = -dofs 1 -elem IceDischarge
   File Name = File "INITMIP_Scalar_OUTPUT_$name$_$id$.dat"
End

!#
!# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!# SOLVER to save mean value instead of instantaneous value
!# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!#

Solver 12 
  Exec Solver = After Timestep
  Equation = "Time Mean value"
     Procedure = "Time_Mean" "Time_Mean"
     Time Mean Variable 1 = String "IceDischarge"
End

!#####
Equation 1
  Active Solvers (12)= 1 2 3 4 5 6 7 8 9 10 11 12
End

!#####
Boundary Condition 1
  Name = "Ice Front"
  Target Boundaries = 1

  Calving Front = logical true

  Save Scalars = Logical True
End
